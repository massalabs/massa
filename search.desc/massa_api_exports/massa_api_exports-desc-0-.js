searchState.loadedDescShard("massa_api_exports", 0, "Copyright (c) 2022 MASSA LABS info@massa.net All the …\nWrap request params into struct for ApiV2 method\ncontains banned entry\ncreate operation\ndelete operation\nBootstrap lists types\nread operation\nSCRUD operations\nsearch operation\nJust a wrapper with a optional beginning and end\nupdate operation\ncontains allowed entry\naddress related structures\nblock-related structures\nnode configuration\ndatastore serialization / deserialization\nDumb utils function to display nicely boolean value\nHelp to format Optional bool\noptional end slot\nendorsements\nmodels error\nexecution\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nledger structures\nnode related structure\noperations\npage\npagination\nrolls\nslots\noptional start slot\nfilter used when retrieving address informations\nAll you ever dream to know about an address\nLess information about an address\nactive rolls\nthe address\nthe address\nAddress\ncandidate balance\ncandidate balance\ncandidate datastore keys\ncandidate roll count\ncandidate rolls\nOnly essential info about an address\ncreated blocks\ncreated endorsements\ncreated operations\ncycle information\ndeferred credits\nfinal balance\nfinal balance\nfinal datastore keys\nfinal roll count\nfinal rolls\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntrue means final false means candidate\nnext block draws\nnext endorsement draws\nthe thread the address belongs to\nthe thread it is\nrefactor to delete\nBlock content\nA block resume (without the block itself)\nblock\noptional block info content\nthe block creator\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nblock id\nid\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntrue if candidate (active any clique but not final)\ntrue if discarded\ntrue if final\ntrue if in a final block\ntrue if in the greatest clique (and not final)\ntrue if in the greatest block clique\ntrue if incompatible with a final block\nthe block parents\nthe slot the block is in\nAPI settings. the API settings\nhost filtering.\nbase gas used by any operation\nbatch request limit. 0 means disabled.\nbind for the Massa API\nbind for the private API\nbind for the public API\nbootstrap blacklist path\nbootstrap whitelist path\nchain id\nDelta to compute upper bounds when fetching deferred …\nwhen looking for next draw we want to look at max …\nwhether to enable HTTP.\nwhether to enable WS.\nReturns the argument unchanged.\n<code>genesis_timestamp</code>\nCalls <code>U::from(self)</code>.\nkeypair file\nlast_start_period value, used to know if we are during a …\nmax argument count\nmaximum number of incoming connections allowed.\nmax datastore value length\nmax function name length\nmax gas in a block\nmax length for logging for requests and responses. Logs …\nmax op datastore entry\nmax datastore key length\nmax datastore value length\nmax parameter size\nmaximum size in bytes of a request.\nmaximum size in bytes of a response.\nmaximum number of subscriptions per connection.\nminimal fees to include an operation in a block\nopenrpc specification path\nperiods per cycle\nthe interval at which <code>Ping</code> frames are submitted.\nAmount required for a SinglePass compilation (ExecuteSC …\nt0\nthread count\nDatastore entry query input structure\nDatastore entry query output structure\nassociated address of the entry\ncandidate datastore entry value\nfinal datastore entry value\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ndatastore key\nAll you wanna know about an endorsement\nthe endorsement itself\nReturns the argument unchanged.\nid\nthe endorsement appears in <code>in_blocks</code> if it appears in …\ntrue if endorsement is still in pool\nCalls <code>U::from(self)</code>.\ntrue if the endorsement is final (for example in a final …\nErrors of the api component.\nBad request: {0}\nconsensus error: {0}\nexecution error: {0}\nVersioning Factory error: {0}\nInconsistency error: {0}\nInternal server error: {0}\n<code>massa_hash</code> error: {0}\nMissing command sender: {0}\nMissing configuration: {0}\nModels error: {0}\nNot found\nProtocol error: {0}\nReceive channel error: {0}\nSend channel error: {0}\nTime error: {0}\nWallet error: {0}\nThe wrong API (either Public or Private) was called\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTransfer made in an asynchronous call\nAn error occurred during execution.\nThe response to a request for a read-only execution.\nThe result of a successful execution.\nTransfer made in an operation\nread only bytecode execution request\nread SC call request\nThe result of the read-only execution.\nStructure defining a transfer\nContext of the transfer\ncaller’s address, optional\nThe amount of the transfer\nBlock ID\nbyte code\ncaller’s address, optional\ncoins\nContext\nThe effective amount received by the receiver\nThe slot at which the read-only execution occurred.\nfee\nfee\nFee\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe sender of the transfer\nThe gas cost for the execution\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmax available gas\nmax available gas\nOperation datastore, optional\nThe output events generated by the read-only execution.\nfunction parameter\nThe result of the read-only execution.\nstate changes caused by the execution step\nIf the transfer succeed or not\ntarget address\ntarget function\nThe receiver of the transfer\nCurrent balance ledger info\nlatest data\nfinal data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nlocked balance, for example balance due to a roll sell\nnode status\nchain id\ncompact configuration\nconnected nodes (node id, ip address, true if the …\nconsensus stats\ncurrent cycle\ncurrent cycle starting timestamp\nnow\nexecution stats\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nlatest slot, none if now is before genesis timestamp\nminimal fees to include an operation in a block\nnetwork stats\nnext cycle starting timestamp\nnext slot\nour node id\noptional node ip\npool stats (operation count and endorsement count)\nnode version\nOperation and contextual info about it\noperation input\nThe public key of the creator of the TX\nReturns the argument unchanged.\nReturns the argument unchanged.\nid\nthe operation appears in <code>in_blocks</code> if it appears in …\ntrue if operation is still in pool\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntrue if the operation is final (for example in a final …\ntrue if the operation execution succeeded, false if …\nthe operation itself\nThe serialized version of the content <code>base58</code> encoded\nThe signature of the operation\nThread in which the operation can be included\nRepresents the request inputs for a PagedVec\nRepresents a Vec that can be split across Pages Cf. …\nRepresents the request inputs for a PagedVecV2\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe limit of elements in a page\nCreates a new Paged Vec with optional limits of item per …\nThe page offset\nRoll counts\ncount taken into account for the current cycle\nat latest blocks\nat final blocks\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nslot / amount pair\namount\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nslot")
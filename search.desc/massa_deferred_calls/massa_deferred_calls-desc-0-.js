searchState.loadedDescShard("massa_deferred_calls", 0, "Definition of a call in the future\nA structure that lists slot calls for a given slot, as …\ndeletes the value\nkeeps the existing value\nkeeps the existing value\nsets a new absolute value T\nsets a new absolute value T\nsets a new absolute value T\nThis module implements a new version of the Autonomous …\ncancelled key formatting macro\ncoins key formatting macro\nkey formatting macro\nfee key formatting macro\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the DeferredCall for a given slot and id\nReturns the base fee for a slot\nReturns the DeferredSlotCalls for a given slot\nReturns the total effective amount of gas booked for a slot\nReturns the total amount of effective gas booked\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmax gas key formatting macro\nparameters key formatting macro\nsender address key formatting macro\ntarget address key formatting macro\ntarget function key formatting macro\ntarget slot key formatting macro\nDefinition of a call in the future\nDeserializer for <code>AsyncCall</code>\nSerializer for <code>AsyncCall</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the effective gas of a call This is the maximum gas of …\nGet the storage cost for a call\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSerializes an <code>DeferredCall</code> into a <code>Vec&lt;u8&gt;</code>\nDeserializes a <code>Vec&lt;u8&gt;</code> into an <code>AsyncCall</code>\nbase fee max max change denominator\ncall gas cost\nReturns the argument unchanged.\nglobal overbooking penalty\nCalls <code>U::from(self)</code>.\nmax function name length\nMaximum size of deferred call future slots (1 week)\nmax parameter size\nmin gas cost (10 nanomassa)\nmin gas increment (1 nanomassa)\nslot overbooking penalty\nthread count\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nadd Delete changes will delete the call from the db …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")
searchState.loadedDescShard("massa_async_pool", 0, "Copyright (c) 2022 MASSA LABS info@massa.net\nRepresents a pool of sorted messages in a deterministic …\nConsolidated changes to the asynchronous message pool\n<code>AsyncPoolChanges</code> serializer\nAsynchronous pool configuration\nDeserializer for <code>AsyncPool</code>\nSerializer for <code>AsyncPool</code>\nCan be executed key formatting macro\nCopyright (c) 2022 MASSA LABS info@massa.net This file …\nCoins key formatting macro\nCopyright (c) 2022 MASSA LABS info@massa.net This file …\nAsynchronous pool configuration\nDestination key formatting macro\nEmission index key formatting macro\nEmission slot key formatting macro\nFee key formatting macro\nFunction name key formatting macro\nFunction params key formatting macro\nmax handler length\nmax handler params length\nMax gas key formatting macro\nmax key length for message deserialization\nmax number of messages in the pool\nMessage id prefix formatting macro\nCopyright (c) 2022 MASSA LABS info@massa.net This file …\nSender key formatting macro\nthread count\nTrigger key formatting macro\nValidity end key formatting macro\nValidity start key formatting macro\nConsolidated changes to the asynchronous message pool\n<code>AsyncPoolChanges</code> serializer\nextends the current <code>AsyncPoolChanges</code> with another one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPushes a message activation to the list of changes.\nPushes a message addition to the list of changes. No …\nPushes a message deletion to the list of changes. No …\nAsynchronous pool configuration\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nmax handler length\nmax handler params length\nmax key length for message deserialization\nmax number of messages in the pool\nthread count\nRepresents a pool of sorted messages in a deterministic …\nDeserializer for <code>AsyncPool</code>\nSerializer for <code>AsyncPool</code>\nApplies pre-compiled <code>AsyncPoolChanges</code> to the pool without …\nAsynchronous pool configuration\nDelete every sub-entry associated to the given address.\nQuery a message from the database.\nQuery a vec of messages from the database.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeserializes the key and value, useful after bootstrap\nCreates a new <code>AsyncPool</code> serializer\nCreates a new <code>AsyncPool</code> deserializer\nCreates an empty <code>AsyncPool</code>\nAdd every sub-entry individually for a given entry.\nRecomputes the local message_info_cache after bootstrap or …\nResets the pool to its initial state\nUpdate the ledger entry of a given address.")
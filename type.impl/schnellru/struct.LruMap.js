(function() {var type_impls = {
"massa_module_cache":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-LruMap%3CK,+V,+L,+S%3E\" class=\"impl\"><a href=\"#impl-Clone-for-LruMap%3CK,+V,+L,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, L, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for LruMap&lt;K, V, L, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Limiter&lt;K, V&gt;,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    &lt;L as Limiter&lt;K, V&gt;&gt;::LinkType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; LruMap&lt;K, V, L, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","massa_module_cache::controller::PreHashLruMap","massa_module_cache::lru_cache::PreHashLruMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-LruMap%3CK,+V,+L,+S%3E\" class=\"impl\"><a href=\"#impl-Default-for-LruMap%3CK,+V,+L,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, L, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for LruMap&lt;K, V, L, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    L: Limiter&lt;K, V&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; LruMap&lt;K, V, L, S&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","massa_module_cache::controller::PreHashLruMap","massa_module_cache::lru_cache::PreHashLruMap"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LruMap%3CK,+V,+L,+S%3E\" class=\"impl\"><a href=\"#impl-LruMap%3CK,+V,+L,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, V, L, S&gt; LruMap&lt;K, V, L, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,\n    L: Limiter&lt;K, V&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">with_hasher</a>(limiter: L, hasher: S) -&gt; LruMap&lt;K, V, L, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new map with a given <code>limiter</code> and <code>hasher</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve_or_panic\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reserve_or_panic</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Ensures that at least <code>additional</code> items can be inserted into the table without\nreallocation.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Will panic if the total number of elements is too big or the memory couldn’t be allocated.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guaranteed_capacity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">guaranteed_capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the current guaranteed capacity of the map.</p>\n<p>This specifies how many elements the map is guaranteed to be able to hold without allocating\nany memory. This is a lower bound; it’s possible that the map can hold more elements than\nthis.</p>\n<p>This value will change as elements are added and removed. In particular, in might go <em>down</em>\nwhen an element is removed from the map.</p>\n<p>This is independent of the cap imposed by the limiter.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.memory_usage_for_memory_budget\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">memory_usage_for_memory_budget</a>(memory_budget: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns an estimated memory usage this map will have with a given <code>memory_budget</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.memory_usage\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">memory_usage</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the current memory usage of the map, in bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether the map is empty or not.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>(\n    &amp;mut self,\n    key: &amp;(impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value for a given key and promotes that element to be the most\nrecently used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_by_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_by_hash</a>(\n    &amp;mut self,\n    hash: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>,\n    is_eq: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;V</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value for a given <code>hash</code> and for which <code>is_eq</code> returns <code>true</code>.\nPromotes that element to be the most recently used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_or_insert</a>&lt;'a&gt;(\n    &amp;mut self,\n    key: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;L as Limiter&lt;K, V&gt;&gt;::KeyToInsert&lt;'a&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    get: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; V,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut V</a>&gt;<div class=\"where\">where\n    &lt;L as Limiter&lt;K, V&gt;&gt;::KeyToInsert&lt;'a&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Tries to get the value for a given <code>key</code> or insert a new value if there’s no element\nin the map which matches that <code>key</code>.</p>\n<p>If present the element will be promoted to be the most recently used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_insert_fallible\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_or_insert_fallible</a>&lt;'a, E&gt;(\n    &amp;mut self,\n    key: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;L as Limiter&lt;K, V&gt;&gt;::KeyToInsert&lt;'a&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    get: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;V, E&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut V</a>&gt;, E&gt;<div class=\"where\">where\n    &lt;L as Limiter&lt;K, V&gt;&gt;::KeyToInsert&lt;'a&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Same as [<code>Self::get_or_insert</code>], just with a fallible callback.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">peek</a>&lt;'a&gt;(\n    &amp;'a self,\n    key: &amp;(impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value for a given key. Does not change the order of the elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">peek_mut</a>&lt;'a&gt;(\n    &amp;'a mut self,\n    key: &amp;(impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the value for a given key. Does not change the order of the elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_by_hash\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">peek_by_hash</a>(\n    &amp;self,\n    hash: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>,\n    is_eq: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;V</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value for a given <code>hash</code> and for which <code>is_eq</code> returns <code>true</code>.\nDoes not change the order of the elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_by_hash_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">peek_by_hash_mut</a>(\n    &amp;mut self,\n    hash: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>,\n    is_eq: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;V</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut V</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the value for a given <code>hash</code> and for which <code>is_eq</code> returns <code>true</code>.\nDoes not change the order of the elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>(&amp;mut self, key: &amp;(impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Removes an element from the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;'a&gt;(\n    &amp;mut self,\n    key: &lt;L as Limiter&lt;K, V&gt;&gt;::KeyToInsert&lt;'a&gt;,\n    value: V,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    &lt;L as Limiter&lt;K, V&gt;&gt;::KeyToInsert&lt;'a&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;K&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Inserts a new element into the map.</p>\n<p>Can fail if the element is rejected by the limiter or if we fail to grow an empty map.</p>\n<p>Returns <code>true</code> if the element was inserted; <code>false</code> otherwise.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clears the map.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_oldest\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop_oldest</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(K, V)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the least recently accessed element and returns it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_newest\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop_newest</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(K, V)</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the most recently accessed element and returns it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_newest\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">peek_newest</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the most recently used (inserted or accessed) element of the map. Does not change\nthe order of the elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_oldest\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">peek_oldest</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;V</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the least recently used (inserted or accessed) element of the map. Does not change\nthe order of the elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; Iter&lt;'_, K, V, L&gt;</h4></section></summary><div class=\"docblock\"><p>An iterator over all of the elements in the most recently used order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">drain</a>(&amp;mut self) -&gt; Drain&lt;'_, K, V, L, S&gt;</h4></section></summary><div class=\"docblock\"><p>Drains the map of all of its elements in the most recently used order.</p>\n<p>When the iterator is dropped the map will be automatically cleared.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limiter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limiter</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;L</a></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the map’s limiter.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.limiter_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">limiter_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;mut L</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the map’s limiter.</p>\n</div></details></div></details>",0,"massa_module_cache::controller::PreHashLruMap","massa_module_cache::lru_cache::PreHashLruMap"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()
name: CD

on:
  push:
    tags:
      - TEST.*
      - DEVN.*
      - MAIN.*
      - SECU.*

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

# Add permissions to access organization secrets
permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-22.04, macOS-latest, windows-latest]
        platform: [x86_64, arm64]
        include:
          - os: ubuntu-22.04
            platform: x86_64
            target: x86_64-unknown-linux-gnu
            name: release_linux.tar.gz
          - os: ubuntu-22.04
            platform: arm64
            target: aarch64-unknown-linux-gnu
            name: release_linux_arm64.tar.gz
          - os: windows-latest
            platform: x86_64
            target: x86_64-pc-windows-gnu
            name: release_windows.zip
          - os: macOS-latest
            platform: x86_64
            target: x86_64-apple-darwin
            name: release_macos.tar.gz
          - os: macOS-latest
            platform: arm64
            target: aarch64-apple-darwin
            name: release_macos_aarch64.tar.gz
        exclude:
          - os: windows-latest
            platform: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
      - uses: ilammy/setup-nasm@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.81.0
          target: ${{ matrix.target }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/cargo@v1
        if: matrix.platform != 'arm64'
        with:
          command: build
          args: --profile release_prebuilt
      - uses: actions-rs/cargo@v1
        if: matrix.platform == 'arm64'
        with:
          use-cross: true
          command: build
          args: --profile release_prebuilt --target ${{ matrix.target }}

      - name: Set binary paths
        shell: bash
        run: |
          if [[ "${{ matrix.platform }}" == "arm64" ]]
          then
            echo "MASSA_NODE_PATH=target/${{ matrix.target }}/release_prebuilt/massa-node" >> $GITHUB_ENV
            echo "MASSA_CLIENT_PATH=target/${{ matrix.target }}/release_prebuilt/massa-client" >> $GITHUB_ENV
          else
            echo "MASSA_NODE_PATH=target/release_prebuilt/massa-node" >> $GITHUB_ENV
            echo "MASSA_CLIENT_PATH=target/release_prebuilt/massa-client" >> $GITHUB_ENV
          fi


      - name: Wait for file system locks to clear
        if: ${{ runner.os == 'Windows' }}
        shell: powershell
        run: |
          Write-Host "Waiting for file system locks to clear..."
          Start-Sleep -Seconds 10
          Write-Host "File system ready for signing operations"

      - name: Sign windows massa-node binary
        if: ${{ runner.os == 'Windows' }}
        uses: massalabs/station/.github/actions/sign-file-digicert@413d4c0bbd042d5e797fbb66bcd2c96be5c3e71a
        with:
          files: "${{ env.MASSA_NODE_PATH }}.exe ${{ env.MASSA_CLIENT_PATH }}.exe"
          SM_API_KEY: ${{ secrets.SM_API_KEY }}
          SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
          SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
          SM_CERT_FINGERPRINT: ${{ secrets.SM_CERT_FINGERPRINT }}
          SM_HOST: ${{ secrets.SM_HOST }}

      - name: Sign Macos binaries
        uses: ./.github/actions/sign-macos
        if: ${{ runner.os == 'macOS' }}
        with:
          paths: "$MASSA_CLIENT_PATH $MASSA_NODE_PATH"
          certificate-p12-base64: ${{ secrets.APPLE_CERTIFICATE_P12_BASE64 }}
          certificate-password: ${{ secrets.APPLE_CERTIFICATE_P12_PASSWORD }}
          signing-identity: ${{ vars.APPLE_DEVELOPER_ID_APPLICATION }}

      - name: Package
        shell: bash
        run: |
          mkdir massa && cd massa && mkdir massa-node && mkdir massa-client

          cp -v "../$MASSA_NODE_PATH" massa-node/massa-node
          cp -v "../$MASSA_CLIENT_PATH" massa-client/massa-client
          cp -rv ../massa-node/config massa-node/config
          cp -rv ../massa-node/base_config massa-node/base_config
          cp -rv ../massa-node/storage massa-node/storage
          cp -rv ../massa-client/config massa-client/config
          cp -rv ../massa-client/base_config massa-client/base_config
          cd ..
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
            7z a massa_${GITHUB_REF/refs\/tags\//}_${{ matrix.name }} massa
          else
            tar czvf massa_${GITHUB_REF/refs\/tags\//}_${{ matrix.name }} massa
          fi

      - name: Upload ${{ matrix.os }}_${{ matrix.platform }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: massa_artifacts_${{ matrix.name }}
          path: |
            massa_*.zip
            massa_*.tar.gz
          if-no-files-found: error
      - name: Publish ${{ matrix.os }}_${{ matrix.platform }} artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            massa_*.zip
            massa_*.tar.gz

  checksum:
    needs: release
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Move all artifacts to workspace
        run: |
          source_directory="artifacts"
          release_directory="${{ github.workspace }}"
          zip_pattern="massa_*.zip"
          tar_pattern="massa_*.tar.gz"

          mkdir -p "$release_directory"
          find "$source_directory" -type f \( -name "$zip_pattern" -o -name "$tar_pattern" \) -exec mv -t "$release_directory" {} +
      - name: Generate checksums file
        uses: jmgilman/actions-generate-checksum@v1
        with:
          method: sha256
          patterns: |
            massa_*.zip
            massa_*.tar.gz
          output: checksums.txt
      - name: Publish checksums file
        uses: softprops/action-gh-release@v1
        with:
          files: |
            checksums.txt
